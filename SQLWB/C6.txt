1) SELECT cust_name AS "Customer Name", 
city, name AS "Salesman", commission 
FROM customer 
INNER JOIN salesman 
ON salesman_id=salesman_id;

2) SELECT cust_name AS "Customer Name", 
city, name AS "Salesman", commission 
FROM customer 
INNER JOIN salesman  
ON salesman_id=salesman_id 
WHERE commission>.12;

3) SELECT cust_name,city,grade, 
name AS "Salesman",city 
FROM customer 
LEFT JOIN salesman 
ON salesman_id=salesman_id 
order by customer_id;

4) SELECT cust_name,city,grade, 
name AS "Salesman", city 
FROM customer  
LEFT OUTER JOIN salesman  
ON salesman_id=salesman_id 
WHERE grade<300 
ORDER BY customer_id;

5) SELECT cust_name,city, ord_no,
ord_date,purch_amt AS "Order Amount" 
FROM customer 
LEFT OUTER JOIN orders 
ON customer_id=b.customer_id 
order by ord_date;

6) SELECT cust_name,city, ord_no,
ord_date,purch_amt AS "Order Amount" 
FROM customer 
LEFT OUTER JOIN orders 
ON customer_id=customer_id 
order by ord_date;

7)SELECT cust_name,city, ord_no,
ord_date,purch_amt AS "Order Amount" 
FROM customer 
FULL OUTER JOIN orders 
ON customer_id=customer_id 
WHERE grade IS NOT NULL;

8) SELECT * 
FROM salesman  
CROSS JOIN customer ;

9) SELECT * 
FROM salesman 
CROSS JOIN  customer 
WHERE city IS NOT NULL 
AND grade IS NOT NULL;

10) SELECT * 
FROM salesman  
CROSS JOIN customer  
WHERE city IS NOT NULL 
AND grade IS NOT NULL 
AND  city<>city;



1)From the following tables write a SQL query to find the salesperson(s) and the customer(s) he represents. Return Customer Name, city, Salesman, commission.

2)From the following tables write a SQL query to find salespeople who received commissions of more than 12 percent from the company.
 Return Customer Name, customer city, Salesman, commission.

3)From the following tables write a SQL query to display the customer name, customer city, grade, salesman, salesman city. 
The results should be sorted by ascending customer_id.

4)From the following tables write a SQL query to find those customers with a grade less than 300.
 Return cust_name, customer city, grade, Salesman, salesmancity. The result should be ordered by ascending customer_id.

5)Write a SQL statement to make a report with customer name, city, order number, order date, and
 order amount in ascending order according to the order date to determine whether any of the existing customers have placed an order or not.


6)Write a SQL statement to generate a list in ascending order of salespersons who work either for one or more customers or have not yet joined any of the customers.


7)Write a SQL statement to generate a report with the customer name, city, order no. order date, 
purchase amount for only those customers on the list who must have a grade and placed one or more orders or which order(s) have been placed by the customer who neither is on the list nor has a grade.

8)Write a SQL query to combine each row of the salesman table with each row of the customer table.

9) Write a SQL statement to create a Cartesian product between salesperson and customer,
 i.e. each salesperson will appear for all customers and vice versa for that salesperson who belongs to that city.

10)Write a SQL statement to make a Cartesian product between salesman and customer 
i.e. each salesman will appear for all customers and vice versa for those salesmen who must belong to a city which is not the same as his customer and the customers should have their own grade.





